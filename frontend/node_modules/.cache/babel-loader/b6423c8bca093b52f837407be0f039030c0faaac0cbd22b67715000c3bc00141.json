{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\fkuce\\\\OneDrive\\\\Desktop\\\\Money Projects\\\\Visualizer\\\\frontend\\\\src\\\\components\\\\Visualizer.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, forwardRef } from 'react';\nimport './Visualizer.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Visualizer = /*#__PURE__*/_s(/*#__PURE__*/forwardRef(_c = _s(({\n  audioFile,\n  template,\n  isPlaying\n}, ref) => {\n  _s();\n  const canvasRef = useRef(null);\n  const audioContextRef = useRef(null);\n  const analyserRef = useRef(null);\n  const animationFrameRef = useRef(null);\n  const sourceRef = useRef(null);\n  const audioElementRef = useRef(null);\n  useEffect(() => {\n    if (!audioFile) return;\n    const initAudio = async () => {\n      try {\n        // Create new audio context if it doesn't exist\n        if (!audioContextRef.current) {\n          audioContextRef.current = new (window.AudioContext || window.webkitAudioContext)();\n        }\n\n        // Create analyzer if it doesn't exist\n        if (!analyserRef.current) {\n          analyserRef.current = audioContextRef.current.createAnalyser();\n          analyserRef.current.fftSize = 2048;\n        }\n\n        // Stop any existing audio source\n        if (sourceRef.current) {\n          sourceRef.current.stop();\n        }\n\n        // Create audio element\n        const audioElement = new Audio(audioFile.path);\n        audioElementRef.current = audioElement;\n\n        // Wait for audio metadata to load\n        await new Promise((resolve, reject) => {\n          audioElement.addEventListener('loadedmetadata', resolve);\n          audioElement.addEventListener('error', reject);\n        });\n\n        // Create media element source\n        const mediaSource = audioContextRef.current.createMediaElementSource(audioElement);\n        mediaSource.connect(analyserRef.current);\n        analyserRef.current.connect(audioContextRef.current.destination);\n\n        // Store the source reference\n        sourceRef.current = mediaSource;\n\n        // Start playback if isPlaying is true\n        if (isPlaying) {\n          audioElement.play();\n          startVisualization();\n        }\n        return () => {\n          if (audioElement) {\n            audioElement.pause();\n            audioElement.src = '';\n          }\n          if (sourceRef.current) {\n            sourceRef.current.disconnect();\n          }\n          cancelAnimationFrame(animationFrameRef.current);\n        };\n      } catch (error) {\n        console.error('Error initializing audio:', error);\n        alert('Error loading audio file. Please try a different file format or check if the file is corrupted.');\n      }\n    };\n    initAudio();\n  }, [audioFile, isPlaying]);\n  useEffect(() => {\n    if (!audioElementRef.current) return;\n    if (isPlaying) {\n      audioElementRef.current.play();\n      startVisualization();\n    } else {\n      audioElementRef.current.pause();\n      cancelAnimationFrame(animationFrameRef.current);\n    }\n  }, [isPlaying]);\n  const startVisualization = () => {\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n    const analyser = analyserRef.current;\n    const bufferLength = analyser.frequencyBinCount;\n    const dataArray = new Uint8Array(bufferLength);\n    const draw = () => {\n      animationFrameRef.current = requestAnimationFrame(draw);\n      analyser.getByteFrequencyData(dataArray);\n      ctx.fillStyle = 'rgb(0, 0, 0)';\n      ctx.fillRect(0, 0, canvas.width, canvas.height);\n      switch (template) {\n        case 'waveform':\n          drawWaveform(ctx, dataArray, bufferLength);\n          break;\n        case 'bars':\n          drawBars(ctx, dataArray, bufferLength);\n          break;\n        case 'circles':\n          drawCircles(ctx, dataArray, bufferLength);\n          break;\n        default:\n          drawWaveform(ctx, dataArray, bufferLength);\n      }\n    };\n    draw();\n  };\n  const drawWaveform = (ctx, dataArray, bufferLength) => {\n    ctx.lineWidth = 2;\n    ctx.strokeStyle = 'rgb(0, 255, 0)';\n    ctx.beginPath();\n    const sliceWidth = ctx.canvas.width / bufferLength;\n    let x = 0;\n    for (let i = 0; i < bufferLength; i++) {\n      const v = dataArray[i] / 128.0;\n      const y = v * ctx.canvas.height / 2;\n      if (i === 0) {\n        ctx.moveTo(x, y);\n      } else {\n        ctx.lineTo(x, y);\n      }\n      x += sliceWidth;\n    }\n    ctx.lineTo(ctx.canvas.width, ctx.canvas.height / 2);\n    ctx.stroke();\n  };\n  const drawBars = (ctx, dataArray, bufferLength) => {\n    const barWidth = ctx.canvas.width / bufferLength * 2.5;\n    let barHeight;\n    let x = 0;\n    for (let i = 0; i < bufferLength; i++) {\n      barHeight = dataArray[i] / 2;\n      ctx.fillStyle = `rgb(${barHeight + 100}, 50, 50)`;\n      ctx.fillRect(x, ctx.canvas.height - barHeight, barWidth, barHeight);\n      x += barWidth + 1;\n    }\n  };\n  const drawCircles = (ctx, dataArray, bufferLength) => {\n    const centerX = ctx.canvas.width / 2;\n    const centerY = ctx.canvas.height / 2;\n    const maxRadius = Math.min(centerX, centerY) * 0.8;\n    for (let i = 0; i < bufferLength; i++) {\n      const radius = dataArray[i] / 255 * maxRadius;\n      const angle = i / bufferLength * Math.PI * 2;\n      const x = centerX + Math.cos(angle) * radius;\n      const y = centerY + Math.sin(angle) * radius;\n      ctx.beginPath();\n      ctx.arc(x, y, 2, 0, Math.PI * 2);\n      ctx.fillStyle = `hsl(${i / bufferLength * 360}, 100%, 50%)`;\n      ctx.fill();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"canvas\", {\n    ref: el => {\n      canvasRef.current = el;\n      if (ref) ref.current = el;\n    },\n    className: \"visualizer-canvas\",\n    width: 800,\n    height: 400\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 180,\n    columnNumber: 5\n  }, this);\n}, \"rvV19nucqVbPjLjn4y1TSZ+KrIc=\")), \"rvV19nucqVbPjLjn4y1TSZ+KrIc=\");\n_c2 = Visualizer;\nexport default Visualizer;\nvar _c, _c2;\n$RefreshReg$(_c, \"Visualizer$forwardRef\");\n$RefreshReg$(_c2, \"Visualizer\");","map":{"version":3,"names":["React","useEffect","useRef","forwardRef","jsxDEV","_jsxDEV","Visualizer","_s","_c","audioFile","template","isPlaying","ref","canvasRef","audioContextRef","analyserRef","animationFrameRef","sourceRef","audioElementRef","initAudio","current","window","AudioContext","webkitAudioContext","createAnalyser","fftSize","stop","audioElement","Audio","path","Promise","resolve","reject","addEventListener","mediaSource","createMediaElementSource","connect","destination","play","startVisualization","pause","src","disconnect","cancelAnimationFrame","error","console","alert","canvas","ctx","getContext","analyser","bufferLength","frequencyBinCount","dataArray","Uint8Array","draw","requestAnimationFrame","getByteFrequencyData","fillStyle","fillRect","width","height","drawWaveform","drawBars","drawCircles","lineWidth","strokeStyle","beginPath","sliceWidth","x","i","v","y","moveTo","lineTo","stroke","barWidth","barHeight","centerX","centerY","maxRadius","Math","min","radius","angle","PI","cos","sin","arc","fill","el","className","fileName","_jsxFileName","lineNumber","columnNumber","_c2","$RefreshReg$"],"sources":["C:/Users/fkuce/OneDrive/Desktop/Money Projects/Visualizer/frontend/src/components/Visualizer.js"],"sourcesContent":["import React, { useEffect, useRef, forwardRef } from 'react';\r\nimport './Visualizer.css';\r\n\r\nconst Visualizer = forwardRef(({ audioFile, template, isPlaying }, ref) => {\r\n  const canvasRef = useRef(null);\r\n  const audioContextRef = useRef(null);\r\n  const analyserRef = useRef(null);\r\n  const animationFrameRef = useRef(null);\r\n  const sourceRef = useRef(null);\r\n  const audioElementRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    if (!audioFile) return;\r\n\r\n    const initAudio = async () => {\r\n      try {\r\n        // Create new audio context if it doesn't exist\r\n        if (!audioContextRef.current) {\r\n          audioContextRef.current = new (window.AudioContext || window.webkitAudioContext)();\r\n        }\r\n\r\n        // Create analyzer if it doesn't exist\r\n        if (!analyserRef.current) {\r\n          analyserRef.current = audioContextRef.current.createAnalyser();\r\n          analyserRef.current.fftSize = 2048;\r\n        }\r\n\r\n        // Stop any existing audio source\r\n        if (sourceRef.current) {\r\n          sourceRef.current.stop();\r\n        }\r\n\r\n        // Create audio element\r\n        const audioElement = new Audio(audioFile.path);\r\n        audioElementRef.current = audioElement;\r\n\r\n        // Wait for audio metadata to load\r\n        await new Promise((resolve, reject) => {\r\n          audioElement.addEventListener('loadedmetadata', resolve);\r\n          audioElement.addEventListener('error', reject);\r\n        });\r\n\r\n        // Create media element source\r\n        const mediaSource = audioContextRef.current.createMediaElementSource(audioElement);\r\n        mediaSource.connect(analyserRef.current);\r\n        analyserRef.current.connect(audioContextRef.current.destination);\r\n\r\n        // Store the source reference\r\n        sourceRef.current = mediaSource;\r\n\r\n        // Start playback if isPlaying is true\r\n        if (isPlaying) {\r\n          audioElement.play();\r\n          startVisualization();\r\n        }\r\n\r\n        return () => {\r\n          if (audioElement) {\r\n            audioElement.pause();\r\n            audioElement.src = '';\r\n          }\r\n          if (sourceRef.current) {\r\n            sourceRef.current.disconnect();\r\n          }\r\n          cancelAnimationFrame(animationFrameRef.current);\r\n        };\r\n      } catch (error) {\r\n        console.error('Error initializing audio:', error);\r\n        alert('Error loading audio file. Please try a different file format or check if the file is corrupted.');\r\n      }\r\n    };\r\n\r\n    initAudio();\r\n  }, [audioFile, isPlaying]);\r\n\r\n  useEffect(() => {\r\n    if (!audioElementRef.current) return;\r\n\r\n    if (isPlaying) {\r\n      audioElementRef.current.play();\r\n      startVisualization();\r\n    } else {\r\n      audioElementRef.current.pause();\r\n      cancelAnimationFrame(animationFrameRef.current);\r\n    }\r\n  }, [isPlaying]);\r\n\r\n  const startVisualization = () => {\r\n    const canvas = canvasRef.current;\r\n    const ctx = canvas.getContext('2d');\r\n    const analyser = analyserRef.current;\r\n    const bufferLength = analyser.frequencyBinCount;\r\n    const dataArray = new Uint8Array(bufferLength);\r\n\r\n    const draw = () => {\r\n      animationFrameRef.current = requestAnimationFrame(draw);\r\n      analyser.getByteFrequencyData(dataArray);\r\n\r\n      ctx.fillStyle = 'rgb(0, 0, 0)';\r\n      ctx.fillRect(0, 0, canvas.width, canvas.height);\r\n\r\n      switch (template) {\r\n        case 'waveform':\r\n          drawWaveform(ctx, dataArray, bufferLength);\r\n          break;\r\n        case 'bars':\r\n          drawBars(ctx, dataArray, bufferLength);\r\n          break;\r\n        case 'circles':\r\n          drawCircles(ctx, dataArray, bufferLength);\r\n          break;\r\n        default:\r\n          drawWaveform(ctx, dataArray, bufferLength);\r\n      }\r\n    };\r\n\r\n    draw();\r\n  };\r\n\r\n  const drawWaveform = (ctx, dataArray, bufferLength) => {\r\n    ctx.lineWidth = 2;\r\n    ctx.strokeStyle = 'rgb(0, 255, 0)';\r\n    ctx.beginPath();\r\n\r\n    const sliceWidth = ctx.canvas.width / bufferLength;\r\n    let x = 0;\r\n\r\n    for (let i = 0; i < bufferLength; i++) {\r\n      const v = dataArray[i] / 128.0;\r\n      const y = v * ctx.canvas.height / 2;\r\n\r\n      if (i === 0) {\r\n        ctx.moveTo(x, y);\r\n      } else {\r\n        ctx.lineTo(x, y);\r\n      }\r\n\r\n      x += sliceWidth;\r\n    }\r\n\r\n    ctx.lineTo(ctx.canvas.width, ctx.canvas.height / 2);\r\n    ctx.stroke();\r\n  };\r\n\r\n  const drawBars = (ctx, dataArray, bufferLength) => {\r\n    const barWidth = (ctx.canvas.width / bufferLength) * 2.5;\r\n    let barHeight;\r\n    let x = 0;\r\n\r\n    for (let i = 0; i < bufferLength; i++) {\r\n      barHeight = dataArray[i] / 2;\r\n\r\n      ctx.fillStyle = `rgb(${barHeight + 100}, 50, 50)`;\r\n      ctx.fillRect(x, ctx.canvas.height - barHeight, barWidth, barHeight);\r\n\r\n      x += barWidth + 1;\r\n    }\r\n  };\r\n\r\n  const drawCircles = (ctx, dataArray, bufferLength) => {\r\n    const centerX = ctx.canvas.width / 2;\r\n    const centerY = ctx.canvas.height / 2;\r\n    const maxRadius = Math.min(centerX, centerY) * 0.8;\r\n\r\n    for (let i = 0; i < bufferLength; i++) {\r\n      const radius = (dataArray[i] / 255) * maxRadius;\r\n      const angle = (i / bufferLength) * Math.PI * 2;\r\n\r\n      const x = centerX + Math.cos(angle) * radius;\r\n      const y = centerY + Math.sin(angle) * radius;\r\n\r\n      ctx.beginPath();\r\n      ctx.arc(x, y, 2, 0, Math.PI * 2);\r\n      ctx.fillStyle = `hsl(${(i / bufferLength) * 360}, 100%, 50%)`;\r\n      ctx.fill();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <canvas\r\n      ref={(el) => {\r\n        canvasRef.current = el;\r\n        if (ref) ref.current = el;\r\n      }}\r\n      className=\"visualizer-canvas\"\r\n      width={800}\r\n      height={400}\r\n    />\r\n  );\r\n});\r\n\r\nexport default Visualizer; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
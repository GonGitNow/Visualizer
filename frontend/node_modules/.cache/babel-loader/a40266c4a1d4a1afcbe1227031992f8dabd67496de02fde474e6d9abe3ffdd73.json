{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\fkuce\\\\OneDrive\\\\Desktop\\\\Money Projects\\\\Visualizer\\\\frontend\\\\src\\\\components\\\\Visualizer.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, forwardRef } from 'react';\nimport './Visualizer.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Visualizer = /*#__PURE__*/_s(/*#__PURE__*/forwardRef(_c = _s(({\n  audioFile,\n  template,\n  isPlaying\n}, ref) => {\n  _s();\n  const canvasRef = useRef(null);\n  const audioContextRef = useRef(null);\n  const analyserRef = useRef(null);\n  const animationFrameRef = useRef(null);\n  const sourceRef = useRef(null);\n  const audioElementRef = useRef(null);\n  useEffect(() => {\n    if (!audioFile) return;\n    const initAudio = async () => {\n      try {\n        // Create new audio context if it doesn't exist\n        if (!audioContextRef.current) {\n          audioContextRef.current = new (window.AudioContext || window.webkitAudioContext)();\n        }\n\n        // Create analyzer if it doesn't exist\n        if (!analyserRef.current) {\n          analyserRef.current = audioContextRef.current.createAnalyser();\n          analyserRef.current.fftSize = 2048;\n        }\n\n        // Stop any existing audio source\n        if (sourceRef.current) {\n          sourceRef.current.disconnect();\n        }\n\n        // Create audio element\n        const audioElement = new Audio();\n        audioElementRef.current = audioElement;\n\n        // Set up error handling\n        audioElement.onerror = e => {\n          var _audioElement$error;\n          console.error('Audio element error:', e);\n          throw new Error(`Failed to load audio: ${((_audioElement$error = audioElement.error) === null || _audioElement$error === void 0 ? void 0 : _audioElement$error.message) || 'Unknown error'}`);\n        };\n\n        // Set the audio source\n        audioElement.src = `http://localhost:5001${audioFile.path}`;\n\n        // Wait for audio metadata to load\n        await new Promise((resolve, reject) => {\n          const timeout = setTimeout(() => {\n            reject(new Error('Audio loading timed out'));\n          }, 10000); // 10 second timeout\n\n          audioElement.addEventListener('loadedmetadata', () => {\n            clearTimeout(timeout);\n            resolve();\n          });\n          audioElement.addEventListener('error', e => {\n            var _audioElement$error2;\n            clearTimeout(timeout);\n            reject(new Error(`Audio loading failed: ${((_audioElement$error2 = audioElement.error) === null || _audioElement$error2 === void 0 ? void 0 : _audioElement$error2.message) || 'Unknown error'}`));\n          });\n        });\n\n        // Create media element source\n        const mediaSource = audioContextRef.current.createMediaElementSource(audioElement);\n        mediaSource.connect(analyserRef.current);\n        analyserRef.current.connect(audioContextRef.current.destination);\n\n        // Store the source reference\n        sourceRef.current = mediaSource;\n\n        // Start playback if isPlaying is true\n        if (isPlaying) {\n          try {\n            await audioElement.play();\n            startVisualization();\n          } catch (playError) {\n            console.error('Error playing audio:', playError);\n            throw new Error('Failed to play audio. Please try again.');\n          }\n        }\n        return () => {\n          if (audioElement) {\n            audioElement.pause();\n            audioElement.src = '';\n          }\n          if (sourceRef.current) {\n            sourceRef.current.disconnect();\n          }\n          cancelAnimationFrame(animationFrameRef.current);\n        };\n      } catch (error) {\n        console.error('Error initializing audio:', error);\n        alert(error.message || 'Error loading audio file. Please try a different file format or check if the file is corrupted.');\n      }\n    };\n    initAudio();\n  }, [audioFile, isPlaying]);\n  useEffect(() => {\n    if (!audioElementRef.current) return;\n    if (isPlaying) {\n      audioElementRef.current.play().catch(error => {\n        console.error('Error playing audio:', error);\n        alert('Failed to play audio. Please try again.');\n      });\n      startVisualization();\n    } else {\n      audioElementRef.current.pause();\n      cancelAnimationFrame(animationFrameRef.current);\n    }\n  }, [isPlaying]);\n  const startVisualization = () => {\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n    const analyser = analyserRef.current;\n    const bufferLength = analyser.frequencyBinCount;\n    const dataArray = new Uint8Array(bufferLength);\n    const draw = () => {\n      animationFrameRef.current = requestAnimationFrame(draw);\n      analyser.getByteFrequencyData(dataArray);\n      ctx.fillStyle = 'rgb(0, 0, 0)';\n      ctx.fillRect(0, 0, canvas.width, canvas.height);\n      switch (template) {\n        case 'waveform':\n          drawWaveform(ctx, dataArray, bufferLength);\n          break;\n        case 'bars':\n          drawBars(ctx, dataArray, bufferLength);\n          break;\n        case 'circles':\n          drawCircles(ctx, dataArray, bufferLength);\n          break;\n        default:\n          drawWaveform(ctx, dataArray, bufferLength);\n      }\n    };\n    draw();\n  };\n  const drawWaveform = (ctx, dataArray, bufferLength) => {\n    ctx.lineWidth = 2;\n    ctx.strokeStyle = 'rgb(0, 255, 0)';\n    ctx.beginPath();\n    const sliceWidth = ctx.canvas.width / bufferLength;\n    let x = 0;\n    for (let i = 0; i < bufferLength; i++) {\n      const v = dataArray[i] / 128.0;\n      const y = v * ctx.canvas.height / 2;\n      if (i === 0) {\n        ctx.moveTo(x, y);\n      } else {\n        ctx.lineTo(x, y);\n      }\n      x += sliceWidth;\n    }\n    ctx.lineTo(ctx.canvas.width, ctx.canvas.height / 2);\n    ctx.stroke();\n  };\n  const drawBars = (ctx, dataArray, bufferLength) => {\n    const barWidth = ctx.canvas.width / bufferLength * 2.5;\n    let barHeight;\n    let x = 0;\n    for (let i = 0; i < bufferLength; i++) {\n      barHeight = dataArray[i] / 2;\n      ctx.fillStyle = `rgb(${barHeight + 100}, 50, 50)`;\n      ctx.fillRect(x, ctx.canvas.height - barHeight, barWidth, barHeight);\n      x += barWidth + 1;\n    }\n  };\n  const drawCircles = (ctx, dataArray, bufferLength) => {\n    const centerX = ctx.canvas.width / 2;\n    const centerY = ctx.canvas.height / 2;\n    const maxRadius = Math.min(centerX, centerY) * 0.8;\n    for (let i = 0; i < bufferLength; i++) {\n      const radius = dataArray[i] / 255 * maxRadius;\n      const angle = i / bufferLength * Math.PI * 2;\n      const x = centerX + Math.cos(angle) * radius;\n      const y = centerY + Math.sin(angle) * radius;\n      ctx.beginPath();\n      ctx.arc(x, y, 2, 0, Math.PI * 2);\n      ctx.fillStyle = `hsl(${i / bufferLength * 360}, 100%, 50%)`;\n      ctx.fill();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"canvas\", {\n    ref: el => {\n      canvasRef.current = el;\n      if (ref) ref.current = el;\n    },\n    className: \"visualizer-canvas\",\n    width: 800,\n    height: 400\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 208,\n    columnNumber: 5\n  }, this);\n}, \"rvV19nucqVbPjLjn4y1TSZ+KrIc=\")), \"rvV19nucqVbPjLjn4y1TSZ+KrIc=\");\n_c2 = Visualizer;\nexport default Visualizer;\nvar _c, _c2;\n$RefreshReg$(_c, \"Visualizer$forwardRef\");\n$RefreshReg$(_c2, \"Visualizer\");","map":{"version":3,"names":["React","useEffect","useRef","forwardRef","jsxDEV","_jsxDEV","Visualizer","_s","_c","audioFile","template","isPlaying","ref","canvasRef","audioContextRef","analyserRef","animationFrameRef","sourceRef","audioElementRef","initAudio","current","window","AudioContext","webkitAudioContext","createAnalyser","fftSize","disconnect","audioElement","Audio","onerror","e","_audioElement$error","console","error","Error","message","src","path","Promise","resolve","reject","timeout","setTimeout","addEventListener","clearTimeout","_audioElement$error2","mediaSource","createMediaElementSource","connect","destination","play","startVisualization","playError","pause","cancelAnimationFrame","alert","catch","canvas","ctx","getContext","analyser","bufferLength","frequencyBinCount","dataArray","Uint8Array","draw","requestAnimationFrame","getByteFrequencyData","fillStyle","fillRect","width","height","drawWaveform","drawBars","drawCircles","lineWidth","strokeStyle","beginPath","sliceWidth","x","i","v","y","moveTo","lineTo","stroke","barWidth","barHeight","centerX","centerY","maxRadius","Math","min","radius","angle","PI","cos","sin","arc","fill","el","className","fileName","_jsxFileName","lineNumber","columnNumber","_c2","$RefreshReg$"],"sources":["C:/Users/fkuce/OneDrive/Desktop/Money Projects/Visualizer/frontend/src/components/Visualizer.js"],"sourcesContent":["import React, { useEffect, useRef, forwardRef } from 'react';\r\nimport './Visualizer.css';\r\n\r\nconst Visualizer = forwardRef(({ audioFile, template, isPlaying }, ref) => {\r\n  const canvasRef = useRef(null);\r\n  const audioContextRef = useRef(null);\r\n  const analyserRef = useRef(null);\r\n  const animationFrameRef = useRef(null);\r\n  const sourceRef = useRef(null);\r\n  const audioElementRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    if (!audioFile) return;\r\n\r\n    const initAudio = async () => {\r\n      try {\r\n        // Create new audio context if it doesn't exist\r\n        if (!audioContextRef.current) {\r\n          audioContextRef.current = new (window.AudioContext || window.webkitAudioContext)();\r\n        }\r\n\r\n        // Create analyzer if it doesn't exist\r\n        if (!analyserRef.current) {\r\n          analyserRef.current = audioContextRef.current.createAnalyser();\r\n          analyserRef.current.fftSize = 2048;\r\n        }\r\n\r\n        // Stop any existing audio source\r\n        if (sourceRef.current) {\r\n          sourceRef.current.disconnect();\r\n        }\r\n\r\n        // Create audio element\r\n        const audioElement = new Audio();\r\n        audioElementRef.current = audioElement;\r\n\r\n        // Set up error handling\r\n        audioElement.onerror = (e) => {\r\n          console.error('Audio element error:', e);\r\n          throw new Error(`Failed to load audio: ${audioElement.error?.message || 'Unknown error'}`);\r\n        };\r\n\r\n        // Set the audio source\r\n        audioElement.src = `http://localhost:5001${audioFile.path}`;\r\n\r\n        // Wait for audio metadata to load\r\n        await new Promise((resolve, reject) => {\r\n          const timeout = setTimeout(() => {\r\n            reject(new Error('Audio loading timed out'));\r\n          }, 10000); // 10 second timeout\r\n\r\n          audioElement.addEventListener('loadedmetadata', () => {\r\n            clearTimeout(timeout);\r\n            resolve();\r\n          });\r\n\r\n          audioElement.addEventListener('error', (e) => {\r\n            clearTimeout(timeout);\r\n            reject(new Error(`Audio loading failed: ${audioElement.error?.message || 'Unknown error'}`));\r\n          });\r\n        });\r\n\r\n        // Create media element source\r\n        const mediaSource = audioContextRef.current.createMediaElementSource(audioElement);\r\n        mediaSource.connect(analyserRef.current);\r\n        analyserRef.current.connect(audioContextRef.current.destination);\r\n\r\n        // Store the source reference\r\n        sourceRef.current = mediaSource;\r\n\r\n        // Start playback if isPlaying is true\r\n        if (isPlaying) {\r\n          try {\r\n            await audioElement.play();\r\n            startVisualization();\r\n          } catch (playError) {\r\n            console.error('Error playing audio:', playError);\r\n            throw new Error('Failed to play audio. Please try again.');\r\n          }\r\n        }\r\n\r\n        return () => {\r\n          if (audioElement) {\r\n            audioElement.pause();\r\n            audioElement.src = '';\r\n          }\r\n          if (sourceRef.current) {\r\n            sourceRef.current.disconnect();\r\n          }\r\n          cancelAnimationFrame(animationFrameRef.current);\r\n        };\r\n      } catch (error) {\r\n        console.error('Error initializing audio:', error);\r\n        alert(error.message || 'Error loading audio file. Please try a different file format or check if the file is corrupted.');\r\n      }\r\n    };\r\n\r\n    initAudio();\r\n  }, [audioFile, isPlaying]);\r\n\r\n  useEffect(() => {\r\n    if (!audioElementRef.current) return;\r\n\r\n    if (isPlaying) {\r\n      audioElementRef.current.play().catch(error => {\r\n        console.error('Error playing audio:', error);\r\n        alert('Failed to play audio. Please try again.');\r\n      });\r\n      startVisualization();\r\n    } else {\r\n      audioElementRef.current.pause();\r\n      cancelAnimationFrame(animationFrameRef.current);\r\n    }\r\n  }, [isPlaying]);\r\n\r\n  const startVisualization = () => {\r\n    const canvas = canvasRef.current;\r\n    const ctx = canvas.getContext('2d');\r\n    const analyser = analyserRef.current;\r\n    const bufferLength = analyser.frequencyBinCount;\r\n    const dataArray = new Uint8Array(bufferLength);\r\n\r\n    const draw = () => {\r\n      animationFrameRef.current = requestAnimationFrame(draw);\r\n      analyser.getByteFrequencyData(dataArray);\r\n\r\n      ctx.fillStyle = 'rgb(0, 0, 0)';\r\n      ctx.fillRect(0, 0, canvas.width, canvas.height);\r\n\r\n      switch (template) {\r\n        case 'waveform':\r\n          drawWaveform(ctx, dataArray, bufferLength);\r\n          break;\r\n        case 'bars':\r\n          drawBars(ctx, dataArray, bufferLength);\r\n          break;\r\n        case 'circles':\r\n          drawCircles(ctx, dataArray, bufferLength);\r\n          break;\r\n        default:\r\n          drawWaveform(ctx, dataArray, bufferLength);\r\n      }\r\n    };\r\n\r\n    draw();\r\n  };\r\n\r\n  const drawWaveform = (ctx, dataArray, bufferLength) => {\r\n    ctx.lineWidth = 2;\r\n    ctx.strokeStyle = 'rgb(0, 255, 0)';\r\n    ctx.beginPath();\r\n\r\n    const sliceWidth = ctx.canvas.width / bufferLength;\r\n    let x = 0;\r\n\r\n    for (let i = 0; i < bufferLength; i++) {\r\n      const v = dataArray[i] / 128.0;\r\n      const y = v * ctx.canvas.height / 2;\r\n\r\n      if (i === 0) {\r\n        ctx.moveTo(x, y);\r\n      } else {\r\n        ctx.lineTo(x, y);\r\n      }\r\n\r\n      x += sliceWidth;\r\n    }\r\n\r\n    ctx.lineTo(ctx.canvas.width, ctx.canvas.height / 2);\r\n    ctx.stroke();\r\n  };\r\n\r\n  const drawBars = (ctx, dataArray, bufferLength) => {\r\n    const barWidth = (ctx.canvas.width / bufferLength) * 2.5;\r\n    let barHeight;\r\n    let x = 0;\r\n\r\n    for (let i = 0; i < bufferLength; i++) {\r\n      barHeight = dataArray[i] / 2;\r\n\r\n      ctx.fillStyle = `rgb(${barHeight + 100}, 50, 50)`;\r\n      ctx.fillRect(x, ctx.canvas.height - barHeight, barWidth, barHeight);\r\n\r\n      x += barWidth + 1;\r\n    }\r\n  };\r\n\r\n  const drawCircles = (ctx, dataArray, bufferLength) => {\r\n    const centerX = ctx.canvas.width / 2;\r\n    const centerY = ctx.canvas.height / 2;\r\n    const maxRadius = Math.min(centerX, centerY) * 0.8;\r\n\r\n    for (let i = 0; i < bufferLength; i++) {\r\n      const radius = (dataArray[i] / 255) * maxRadius;\r\n      const angle = (i / bufferLength) * Math.PI * 2;\r\n\r\n      const x = centerX + Math.cos(angle) * radius;\r\n      const y = centerY + Math.sin(angle) * radius;\r\n\r\n      ctx.beginPath();\r\n      ctx.arc(x, y, 2, 0, Math.PI * 2);\r\n      ctx.fillStyle = `hsl(${(i / bufferLength) * 360}, 100%, 50%)`;\r\n      ctx.fill();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <canvas\r\n      ref={(el) => {\r\n        canvasRef.current = el;\r\n        if (ref) ref.current = el;\r\n      }}\r\n      className=\"visualizer-canvas\"\r\n      width={800}\r\n      height={400}\r\n    />\r\n  );\r\n});\r\n\r\nexport default Visualizer; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
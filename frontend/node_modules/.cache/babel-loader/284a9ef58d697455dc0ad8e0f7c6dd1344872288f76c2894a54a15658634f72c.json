{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\fkuce\\\\OneDrive\\\\Desktop\\\\Money Projects\\\\Visualizer\\\\frontend\\\\src\\\\components\\\\VisualizerControls.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './VisualizerControls.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst VisualizerControls = ({\n  template,\n  onParametersChange,\n  initialParameters\n}) => {\n  _s();\n  // Define default parameters for each visualization type\n  const defaultParameters = {\n    // 2D Visualizations\n    waveform: {\n      color: '#00aaff',\n      lineWidth: 3,\n      reactivity: 50,\n      smoothing: 50\n    },\n    bars: {\n      color: '#ff5500',\n      barWidth: 50,\n      spacing: 30,\n      reactivity: 50\n    },\n    circles: {\n      color: '#ff00ff',\n      radius: 50,\n      count: 50,\n      reactivity: 50\n    },\n    kaleidoscope: {\n      color: '#ffaa00',\n      segments: 8,\n      speed: 50,\n      reactivity: 50\n    },\n    spiral: {\n      color: '#00ff99',\n      arms: 5,\n      speed: 50,\n      reactivity: 50\n    },\n    ripple: {\n      color: '#00ffff',\n      speed: 50,\n      density: 50,\n      reactivity: 50\n    },\n    particles: {\n      color: '#ffffff',\n      count: 50,\n      size: 50,\n      speed: 50,\n      reactivity: 50\n    },\n    // 3D Visualizations\n    particles3d: {\n      color: '#ffffff',\n      count: 50,\n      size: 50,\n      speed: 50,\n      reactivity: 50\n    },\n    waveform3d: {\n      color: '#00aaff',\n      lineWidth: 3,\n      height: 50,\n      speed: 50,\n      reactivity: 50\n    },\n    spiral3d: {\n      color: '#00ff99',\n      arms: 5,\n      radius: 50,\n      speed: 50,\n      reactivity: 50\n    },\n    kaleidoscope3d: {\n      color: '#ffaa00',\n      complexity: 50,\n      speed: 50,\n      reactivity: 50\n    }\n  };\n\n  // Initialize parameters state based on initialParameters or template defaults\n  const [parameters, setParameters] = useState(initialParameters || defaultParameters[template] || defaultParameters.waveform);\n\n  // Update parameters when template changes, but preserve user settings if available\n  useEffect(() => {\n    console.log(\"Template changed to:\", template);\n    // Only reset to defaults if the template changes\n    if (!initialParameters || Object.keys(initialParameters).length === 0) {\n      const newParams = defaultParameters[template] || defaultParameters.waveform;\n      setParameters(newParams);\n      onParametersChange(newParams);\n    }\n  }, [template, onParametersChange]);\n\n  // Update local state when initialParameters change from parent\n  useEffect(() => {\n    if (initialParameters && Object.keys(initialParameters).length > 0) {\n      console.log(\"Received updated parameters from parent:\", initialParameters);\n      setParameters(initialParameters);\n    }\n  }, [initialParameters]);\n\n  // Handle parameter change\n  const handleParameterChange = (param, value) => {\n    console.log(`Changing parameter ${param} to ${value}`);\n    const newParameters = {\n      ...parameters,\n      [param]: value\n    };\n    setParameters(newParameters);\n    onParametersChange(newParameters);\n  };\n\n  // Get controls based on template\n  const getControls = () => {\n    // Common controls for all visualizations\n    const commonControls = /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"parameter-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Reactivity\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"slider-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"range\",\n            min: \"0\",\n            max: \"100\",\n            value: parameters.reactivity,\n            onChange: e => handleParameterChange('reactivity', parseInt(e.target.value))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"slider-value\",\n            children: [parameters.reactivity, \"%\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"parameter-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Color\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"color\",\n          value: parameters.color,\n          onChange: e => handleParameterChange('color', e.target.value),\n          className: \"color-picker\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n\n    // Template-specific controls\n    switch (template) {\n      case 'waveform':\n      case 'waveform3d':\n        return /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [commonControls, /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"parameter-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Line Width\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"slider-container\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"range\",\n                min: \"1\",\n                max: \"10\",\n                value: parameters.lineWidth,\n                onChange: e => handleParameterChange('lineWidth', parseInt(e.target.value))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 155,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"slider-value\",\n                children: [parameters.lineWidth, \"px\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 162,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 154,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"parameter-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Smoothing\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 166,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"slider-container\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"range\",\n                min: \"0\",\n                max: \"100\",\n                value: parameters.smoothing,\n                onChange: e => handleParameterChange('smoothing', parseInt(e.target.value))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 168,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"slider-value\",\n                children: [parameters.smoothing, \"%\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 175,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 167,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true);\n      case 'bars':\n        return /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [commonControls, /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"parameter-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Bar Width\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 186,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"slider-container\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"range\",\n                min: \"10\",\n                max: \"100\",\n                value: parameters.barWidth,\n                onChange: e => handleParameterChange('barWidth', parseInt(e.target.value))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 188,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"slider-value\",\n                children: [parameters.barWidth, \"%\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 195,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 187,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"parameter-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Spacing\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 199,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"slider-container\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"range\",\n                min: \"0\",\n                max: \"100\",\n                value: parameters.spacing,\n                onChange: e => handleParameterChange('spacing', parseInt(e.target.value))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 201,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"slider-value\",\n                children: [parameters.spacing, \"%\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 208,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 200,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true);\n      case 'circles':\n        return /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [commonControls, /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"parameter-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Radius\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 219,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"slider-container\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"range\",\n                min: \"10\",\n                max: \"100\",\n                value: parameters.radius,\n                onChange: e => handleParameterChange('radius', parseInt(e.target.value))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 221,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"slider-value\",\n                children: [parameters.radius, \"%\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 228,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 220,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"parameter-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Count\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 232,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"slider-container\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"range\",\n                min: \"1\",\n                max: \"100\",\n                value: parameters.count,\n                onChange: e => handleParameterChange('count', parseInt(e.target.value))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 234,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"slider-value\",\n                children: parameters.count\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 241,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 233,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true);\n      case 'kaleidoscope':\n      case 'kaleidoscope3d':\n        return /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [commonControls, /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"parameter-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: template === 'kaleidoscope' ? 'Segments' : 'Complexity'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 253,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"slider-container\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"range\",\n                min: template === 'kaleidoscope' ? '3' : '1',\n                max: template === 'kaleidoscope' ? '16' : '100',\n                value: template === 'kaleidoscope' ? parameters.segments : parameters.complexity,\n                onChange: e => handleParameterChange(template === 'kaleidoscope' ? 'segments' : 'complexity', parseInt(e.target.value))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 255,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"slider-value\",\n                children: [template === 'kaleidoscope' ? parameters.segments : parameters.complexity, template === 'kaleidoscope' ? '' : '%']\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 267,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 254,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 252,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"parameter-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Speed\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 274,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"slider-container\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"range\",\n                min: \"0\",\n                max: \"100\",\n                value: parameters.speed,\n                onChange: e => handleParameterChange('speed', parseInt(e.target.value))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 276,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"slider-value\",\n                children: [parameters.speed, \"%\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 283,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 275,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 273,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true);\n      case 'spiral':\n      case 'spiral3d':\n        return /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [commonControls, /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"parameter-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Arms\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 295,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"slider-container\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"range\",\n                min: \"1\",\n                max: \"10\",\n                value: parameters.arms,\n                onChange: e => handleParameterChange('arms', parseInt(e.target.value))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 297,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"slider-value\",\n                children: parameters.arms\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 304,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 296,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 294,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"parameter-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Speed\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 308,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"slider-container\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"range\",\n                min: \"0\",\n                max: \"100\",\n                value: parameters.speed,\n                onChange: e => handleParameterChange('speed', parseInt(e.target.value))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 310,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"slider-value\",\n                children: [parameters.speed, \"%\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 317,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 309,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 307,\n            columnNumber: 13\n          }, this), template === 'spiral3d' && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"parameter-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Radius\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 322,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"slider-container\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"range\",\n                min: \"10\",\n                max: \"100\",\n                value: parameters.radius,\n                onChange: e => handleParameterChange('radius', parseInt(e.target.value))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 324,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"slider-value\",\n                children: [parameters.radius, \"%\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 331,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 323,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 321,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true);\n      case 'particles':\n      case 'particles3d':\n        return /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [commonControls, /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"parameter-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Count\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 344,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"slider-container\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"range\",\n                min: \"10\",\n                max: \"100\",\n                value: parameters.count,\n                onChange: e => handleParameterChange('count', parseInt(e.target.value))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 346,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"slider-value\",\n                children: [parameters.count, \"%\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 353,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 345,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 343,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"parameter-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Size\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 357,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"slider-container\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"range\",\n                min: \"10\",\n                max: \"100\",\n                value: parameters.size,\n                onChange: e => handleParameterChange('size', parseInt(e.target.value))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 359,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"slider-value\",\n                children: [parameters.size, \"%\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 366,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 358,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 356,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"parameter-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Speed\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 370,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"slider-container\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"range\",\n                min: \"0\",\n                max: \"100\",\n                value: parameters.speed,\n                onChange: e => handleParameterChange('speed', parseInt(e.target.value))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 372,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"slider-value\",\n                children: [parameters.speed, \"%\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 379,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 371,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 369,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true);\n      default:\n        return commonControls;\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"visualizer-controls\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Customize Visualization\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 392,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"parameters-container\",\n      children: getControls()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 393,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"controls-buttons\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"reset-button\",\n        onClick: () => {\n          setParameters(defaultParameters[template] || defaultParameters.waveform);\n          onParametersChange(defaultParameters[template] || defaultParameters.waveform);\n        },\n        children: \"Reset to Default\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 397,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 396,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 391,\n    columnNumber: 5\n  }, this);\n};\n_s(VisualizerControls, \"oKkqLNX2pY1DL9Pb5KVrmb34oJQ=\");\n_c = VisualizerControls;\nexport default VisualizerControls;\nvar _c;\n$RefreshReg$(_c, \"VisualizerControls\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Fragment","_Fragment","VisualizerControls","template","onParametersChange","initialParameters","_s","defaultParameters","waveform","color","lineWidth","reactivity","smoothing","bars","barWidth","spacing","circles","radius","count","kaleidoscope","segments","speed","spiral","arms","ripple","density","particles","size","particles3d","waveform3d","height","spiral3d","kaleidoscope3d","complexity","parameters","setParameters","console","log","Object","keys","length","newParams","handleParameterChange","param","value","newParameters","getControls","commonControls","children","className","fileName","_jsxFileName","lineNumber","columnNumber","type","min","max","onChange","e","parseInt","target","onClick","_c","$RefreshReg$"],"sources":["C:/Users/fkuce/OneDrive/Desktop/Money Projects/Visualizer/frontend/src/components/VisualizerControls.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './VisualizerControls.css';\n\nconst VisualizerControls = ({ template, onParametersChange, initialParameters }) => {\n  // Define default parameters for each visualization type\n  const defaultParameters = {\n    // 2D Visualizations\n    waveform: {\n      color: '#00aaff',\n      lineWidth: 3,\n      reactivity: 50,\n      smoothing: 50\n    },\n    bars: {\n      color: '#ff5500',\n      barWidth: 50,\n      spacing: 30,\n      reactivity: 50\n    },\n    circles: {\n      color: '#ff00ff',\n      radius: 50,\n      count: 50,\n      reactivity: 50\n    },\n    kaleidoscope: {\n      color: '#ffaa00',\n      segments: 8,\n      speed: 50,\n      reactivity: 50\n    },\n    spiral: {\n      color: '#00ff99',\n      arms: 5,\n      speed: 50,\n      reactivity: 50\n    },\n    ripple: {\n      color: '#00ffff',\n      speed: 50,\n      density: 50,\n      reactivity: 50\n    },\n    particles: {\n      color: '#ffffff',\n      count: 50,\n      size: 50,\n      speed: 50,\n      reactivity: 50\n    },\n    \n    // 3D Visualizations\n    particles3d: {\n      color: '#ffffff',\n      count: 50,\n      size: 50,\n      speed: 50,\n      reactivity: 50\n    },\n    waveform3d: {\n      color: '#00aaff',\n      lineWidth: 3,\n      height: 50,\n      speed: 50,\n      reactivity: 50\n    },\n    spiral3d: {\n      color: '#00ff99',\n      arms: 5,\n      radius: 50,\n      speed: 50,\n      reactivity: 50\n    },\n    kaleidoscope3d: {\n      color: '#ffaa00',\n      complexity: 50,\n      speed: 50,\n      reactivity: 50\n    }\n  };\n\n  // Initialize parameters state based on initialParameters or template defaults\n  const [parameters, setParameters] = useState(\n    initialParameters || defaultParameters[template] || defaultParameters.waveform\n  );\n\n  // Update parameters when template changes, but preserve user settings if available\n  useEffect(() => {\n    console.log(\"Template changed to:\", template);\n    // Only reset to defaults if the template changes\n    if (!initialParameters || Object.keys(initialParameters).length === 0) {\n      const newParams = defaultParameters[template] || defaultParameters.waveform;\n      setParameters(newParams);\n      onParametersChange(newParams);\n    }\n  }, [template, onParametersChange]);\n\n  // Update local state when initialParameters change from parent\n  useEffect(() => {\n    if (initialParameters && Object.keys(initialParameters).length > 0) {\n      console.log(\"Received updated parameters from parent:\", initialParameters);\n      setParameters(initialParameters);\n    }\n  }, [initialParameters]);\n\n  // Handle parameter change\n  const handleParameterChange = (param, value) => {\n    console.log(`Changing parameter ${param} to ${value}`);\n    const newParameters = { ...parameters, [param]: value };\n    setParameters(newParameters);\n    onParametersChange(newParameters);\n  };\n\n  // Get controls based on template\n  const getControls = () => {\n    // Common controls for all visualizations\n    const commonControls = (\n      <>\n        <div className=\"parameter-group\">\n          <label>Reactivity</label>\n          <div className=\"slider-container\">\n            <input\n              type=\"range\"\n              min=\"0\"\n              max=\"100\"\n              value={parameters.reactivity}\n              onChange={(e) => handleParameterChange('reactivity', parseInt(e.target.value))}\n            />\n            <span className=\"slider-value\">{parameters.reactivity}%</span>\n          </div>\n        </div>\n        \n        <div className=\"parameter-group\">\n          <label>Color</label>\n          <input\n            type=\"color\"\n            value={parameters.color}\n            onChange={(e) => handleParameterChange('color', e.target.value)}\n            className=\"color-picker\"\n          />\n        </div>\n      </>\n    );\n\n    // Template-specific controls\n    switch (template) {\n      case 'waveform':\n      case 'waveform3d':\n        return (\n          <>\n            {commonControls}\n            <div className=\"parameter-group\">\n              <label>Line Width</label>\n              <div className=\"slider-container\">\n                <input\n                  type=\"range\"\n                  min=\"1\"\n                  max=\"10\"\n                  value={parameters.lineWidth}\n                  onChange={(e) => handleParameterChange('lineWidth', parseInt(e.target.value))}\n                />\n                <span className=\"slider-value\">{parameters.lineWidth}px</span>\n              </div>\n            </div>\n            <div className=\"parameter-group\">\n              <label>Smoothing</label>\n              <div className=\"slider-container\">\n                <input\n                  type=\"range\"\n                  min=\"0\"\n                  max=\"100\"\n                  value={parameters.smoothing}\n                  onChange={(e) => handleParameterChange('smoothing', parseInt(e.target.value))}\n                />\n                <span className=\"slider-value\">{parameters.smoothing}%</span>\n              </div>\n            </div>\n          </>\n        );\n        \n      case 'bars':\n        return (\n          <>\n            {commonControls}\n            <div className=\"parameter-group\">\n              <label>Bar Width</label>\n              <div className=\"slider-container\">\n                <input\n                  type=\"range\"\n                  min=\"10\"\n                  max=\"100\"\n                  value={parameters.barWidth}\n                  onChange={(e) => handleParameterChange('barWidth', parseInt(e.target.value))}\n                />\n                <span className=\"slider-value\">{parameters.barWidth}%</span>\n              </div>\n            </div>\n            <div className=\"parameter-group\">\n              <label>Spacing</label>\n              <div className=\"slider-container\">\n                <input\n                  type=\"range\"\n                  min=\"0\"\n                  max=\"100\"\n                  value={parameters.spacing}\n                  onChange={(e) => handleParameterChange('spacing', parseInt(e.target.value))}\n                />\n                <span className=\"slider-value\">{parameters.spacing}%</span>\n              </div>\n            </div>\n          </>\n        );\n        \n      case 'circles':\n        return (\n          <>\n            {commonControls}\n            <div className=\"parameter-group\">\n              <label>Radius</label>\n              <div className=\"slider-container\">\n                <input\n                  type=\"range\"\n                  min=\"10\"\n                  max=\"100\"\n                  value={parameters.radius}\n                  onChange={(e) => handleParameterChange('radius', parseInt(e.target.value))}\n                />\n                <span className=\"slider-value\">{parameters.radius}%</span>\n              </div>\n            </div>\n            <div className=\"parameter-group\">\n              <label>Count</label>\n              <div className=\"slider-container\">\n                <input\n                  type=\"range\"\n                  min=\"1\"\n                  max=\"100\"\n                  value={parameters.count}\n                  onChange={(e) => handleParameterChange('count', parseInt(e.target.value))}\n                />\n                <span className=\"slider-value\">{parameters.count}</span>\n              </div>\n            </div>\n          </>\n        );\n        \n      case 'kaleidoscope':\n      case 'kaleidoscope3d':\n        return (\n          <>\n            {commonControls}\n            <div className=\"parameter-group\">\n              <label>{template === 'kaleidoscope' ? 'Segments' : 'Complexity'}</label>\n              <div className=\"slider-container\">\n                <input\n                  type=\"range\"\n                  min={template === 'kaleidoscope' ? '3' : '1'}\n                  max={template === 'kaleidoscope' ? '16' : '100'}\n                  value={template === 'kaleidoscope' ? parameters.segments : parameters.complexity}\n                  onChange={(e) => \n                    handleParameterChange(\n                      template === 'kaleidoscope' ? 'segments' : 'complexity', \n                      parseInt(e.target.value)\n                    )\n                  }\n                />\n                <span className=\"slider-value\">\n                  {template === 'kaleidoscope' ? parameters.segments : parameters.complexity}\n                  {template === 'kaleidoscope' ? '' : '%'}\n                </span>\n              </div>\n            </div>\n            <div className=\"parameter-group\">\n              <label>Speed</label>\n              <div className=\"slider-container\">\n                <input\n                  type=\"range\"\n                  min=\"0\"\n                  max=\"100\"\n                  value={parameters.speed}\n                  onChange={(e) => handleParameterChange('speed', parseInt(e.target.value))}\n                />\n                <span className=\"slider-value\">{parameters.speed}%</span>\n              </div>\n            </div>\n          </>\n        );\n        \n      case 'spiral':\n      case 'spiral3d':\n        return (\n          <>\n            {commonControls}\n            <div className=\"parameter-group\">\n              <label>Arms</label>\n              <div className=\"slider-container\">\n                <input\n                  type=\"range\"\n                  min=\"1\"\n                  max=\"10\"\n                  value={parameters.arms}\n                  onChange={(e) => handleParameterChange('arms', parseInt(e.target.value))}\n                />\n                <span className=\"slider-value\">{parameters.arms}</span>\n              </div>\n            </div>\n            <div className=\"parameter-group\">\n              <label>Speed</label>\n              <div className=\"slider-container\">\n                <input\n                  type=\"range\"\n                  min=\"0\"\n                  max=\"100\"\n                  value={parameters.speed}\n                  onChange={(e) => handleParameterChange('speed', parseInt(e.target.value))}\n                />\n                <span className=\"slider-value\">{parameters.speed}%</span>\n              </div>\n            </div>\n            {template === 'spiral3d' && (\n              <div className=\"parameter-group\">\n                <label>Radius</label>\n                <div className=\"slider-container\">\n                  <input\n                    type=\"range\"\n                    min=\"10\"\n                    max=\"100\"\n                    value={parameters.radius}\n                    onChange={(e) => handleParameterChange('radius', parseInt(e.target.value))}\n                  />\n                  <span className=\"slider-value\">{parameters.radius}%</span>\n                </div>\n              </div>\n            )}\n          </>\n        );\n        \n      case 'particles':\n      case 'particles3d':\n        return (\n          <>\n            {commonControls}\n            <div className=\"parameter-group\">\n              <label>Count</label>\n              <div className=\"slider-container\">\n                <input\n                  type=\"range\"\n                  min=\"10\"\n                  max=\"100\"\n                  value={parameters.count}\n                  onChange={(e) => handleParameterChange('count', parseInt(e.target.value))}\n                />\n                <span className=\"slider-value\">{parameters.count}%</span>\n              </div>\n            </div>\n            <div className=\"parameter-group\">\n              <label>Size</label>\n              <div className=\"slider-container\">\n                <input\n                  type=\"range\"\n                  min=\"10\"\n                  max=\"100\"\n                  value={parameters.size}\n                  onChange={(e) => handleParameterChange('size', parseInt(e.target.value))}\n                />\n                <span className=\"slider-value\">{parameters.size}%</span>\n              </div>\n            </div>\n            <div className=\"parameter-group\">\n              <label>Speed</label>\n              <div className=\"slider-container\">\n                <input\n                  type=\"range\"\n                  min=\"0\"\n                  max=\"100\"\n                  value={parameters.speed}\n                  onChange={(e) => handleParameterChange('speed', parseInt(e.target.value))}\n                />\n                <span className=\"slider-value\">{parameters.speed}%</span>\n              </div>\n            </div>\n          </>\n        );\n        \n      default:\n        return commonControls;\n    }\n  };\n\n  return (\n    <div className=\"visualizer-controls\">\n      <h3>Customize Visualization</h3>\n      <div className=\"parameters-container\">\n        {getControls()}\n      </div>\n      <div className=\"controls-buttons\">\n        <button \n          className=\"reset-button\"\n          onClick={() => {\n            setParameters(defaultParameters[template] || defaultParameters.waveform);\n            onParametersChange(defaultParameters[template] || defaultParameters.waveform);\n          }}\n        >\n          Reset to Default\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default VisualizerControls; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\fkuce\\\\OneDrive\\\\Desktop\\\\Money Projects\\\\Visualizer\\\\frontend\\\\src\\\\components\\\\AudioUploader.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useState } from 'react';\nimport './AudioUploader.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AudioUploader = ({\n  onUpload\n}) => {\n  _s();\n  const fileInputRef = useRef(null);\n  const [isUploading, setIsUploading] = useState(false);\n  const [error, setError] = useState(null);\n  const handleFileChange = async event => {\n    const file = event.target.files[0];\n    if (!file) return;\n\n    // Reset error state\n    setError(null);\n    setIsUploading(true);\n\n    // Validate file type\n    const allowedTypes = ['audio/mpeg', 'audio/wav', 'audio/ogg'];\n    if (!allowedTypes.includes(file.type)) {\n      setError('Please select a valid audio file (MP3, WAV, or OGG)');\n      setIsUploading(false);\n      return;\n    }\n\n    // Validate file size (50MB limit)\n    if (file.size > 50 * 1024 * 1024) {\n      setError('File size must be less than 50MB');\n      setIsUploading(false);\n      return;\n    }\n    const formData = new FormData();\n    formData.append('audio', file);\n    try {\n      const response = await fetch('http://localhost:5001/api/upload', {\n        method: 'POST',\n        body: formData\n      });\n      const data = await response.json();\n      if (!response.ok) {\n        throw new Error(data.error || 'Upload failed');\n      }\n      onUpload(data);\n    } catch (error) {\n      console.error('Error uploading file:', error);\n      setError(error.message || 'Failed to upload file. Please try again.');\n    } finally {\n      setIsUploading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"audio-uploader\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      ref: fileInputRef,\n      onChange: handleFileChange,\n      accept: \"audio/mpeg,audio/wav,audio/ogg\",\n      style: {\n        display: 'none'\n      },\n      disabled: isUploading\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: `upload-button ${isUploading ? 'uploading' : ''}`,\n      onClick: () => fileInputRef.current.click(),\n      disabled: isUploading,\n      children: isUploading ? 'Uploading...' : 'Upload Audio File'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"file-types\",\n      children: \"Supported formats: MP3, WAV, OGG (max 50MB)\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error-message\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n};\n_s(AudioUploader, \"yISfgg/2mo/OSAIhR7GVTYgp1Lw=\");\n_c = AudioUploader;\nexport default AudioUploader;\nvar _c;\n$RefreshReg$(_c, \"AudioUploader\");","map":{"version":3,"names":["React","useRef","useState","jsxDEV","_jsxDEV","AudioUploader","onUpload","_s","fileInputRef","isUploading","setIsUploading","error","setError","handleFileChange","event","file","target","files","allowedTypes","includes","type","size","formData","FormData","append","response","fetch","method","body","data","json","ok","Error","console","message","className","children","ref","onChange","accept","style","display","disabled","fileName","_jsxFileName","lineNumber","columnNumber","onClick","current","click","_c","$RefreshReg$"],"sources":["C:/Users/fkuce/OneDrive/Desktop/Money Projects/Visualizer/frontend/src/components/AudioUploader.js"],"sourcesContent":["import React, { useRef, useState } from 'react';\r\nimport './AudioUploader.css';\r\n\r\nconst AudioUploader = ({ onUpload }) => {\r\n  const fileInputRef = useRef(null);\r\n  const [isUploading, setIsUploading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n\r\n  const handleFileChange = async (event) => {\r\n    const file = event.target.files[0];\r\n    if (!file) return;\r\n\r\n    // Reset error state\r\n    setError(null);\r\n    setIsUploading(true);\r\n\r\n    // Validate file type\r\n    const allowedTypes = ['audio/mpeg', 'audio/wav', 'audio/ogg'];\r\n    if (!allowedTypes.includes(file.type)) {\r\n      setError('Please select a valid audio file (MP3, WAV, or OGG)');\r\n      setIsUploading(false);\r\n      return;\r\n    }\r\n\r\n    // Validate file size (50MB limit)\r\n    if (file.size > 50 * 1024 * 1024) {\r\n      setError('File size must be less than 50MB');\r\n      setIsUploading(false);\r\n      return;\r\n    }\r\n\r\n    const formData = new FormData();\r\n    formData.append('audio', file);\r\n\r\n    try {\r\n      const response = await fetch('http://localhost:5001/api/upload', {\r\n        method: 'POST',\r\n        body: formData\r\n      });\r\n\r\n      const data = await response.json();\r\n\r\n      if (!response.ok) {\r\n        throw new Error(data.error || 'Upload failed');\r\n      }\r\n\r\n      onUpload(data);\r\n    } catch (error) {\r\n      console.error('Error uploading file:', error);\r\n      setError(error.message || 'Failed to upload file. Please try again.');\r\n    } finally {\r\n      setIsUploading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"audio-uploader\">\r\n      <input\r\n        type=\"file\"\r\n        ref={fileInputRef}\r\n        onChange={handleFileChange}\r\n        accept=\"audio/mpeg,audio/wav,audio/ogg\"\r\n        style={{ display: 'none' }}\r\n        disabled={isUploading}\r\n      />\r\n      <button\r\n        className={`upload-button ${isUploading ? 'uploading' : ''}`}\r\n        onClick={() => fileInputRef.current.click()}\r\n        disabled={isUploading}\r\n      >\r\n        {isUploading ? 'Uploading...' : 'Upload Audio File'}\r\n      </button>\r\n      <p className=\"file-types\">Supported formats: MP3, WAV, OGG (max 50MB)</p>\r\n      {error && <p className=\"error-message\">{error}</p>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AudioUploader; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
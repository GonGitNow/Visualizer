{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\fkuce\\\\OneDrive\\\\Desktop\\\\Money Projects\\\\Visualizer\\\\frontend\\\\src\\\\components\\\\AudioUploader.js\",\n  _s = $RefreshSig$();\nimport React, { useRef } from 'react';\nimport './AudioUploader.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AudioUploader = ({\n  onUpload\n}) => {\n  _s();\n  const fileInputRef = useRef(null);\n  const handleFileChange = async event => {\n    const file = event.target.files[0];\n    if (!file) return;\n    const formData = new FormData();\n    formData.append('audio', file);\n    try {\n      const response = await fetch('http://localhost:5001/api/upload', {\n        method: 'POST',\n        body: formData\n      });\n      if (!response.ok) {\n        throw new Error('Upload failed');\n      }\n      const data = await response.json();\n      onUpload(data);\n    } catch (error) {\n      console.error('Error uploading file:', error);\n      alert('Failed to upload file. Please try again.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"audio-uploader\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      ref: fileInputRef,\n      onChange: handleFileChange,\n      accept: \"audio/*\",\n      style: {\n        display: 'none'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"upload-button\",\n      onClick: () => fileInputRef.current.click(),\n      children: \"Upload Audio File\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"file-types\",\n      children: \"Supported formats: MP3, WAV, OGG\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n_s(AudioUploader, \"YQqvMxdmg33cmOXmQcOjJm+FLVI=\");\n_c = AudioUploader;\nexport default AudioUploader;\nvar _c;\n$RefreshReg$(_c, \"AudioUploader\");","map":{"version":3,"names":["React","useRef","jsxDEV","_jsxDEV","AudioUploader","onUpload","_s","fileInputRef","handleFileChange","event","file","target","files","formData","FormData","append","response","fetch","method","body","ok","Error","data","json","error","console","alert","className","children","type","ref","onChange","accept","style","display","fileName","_jsxFileName","lineNumber","columnNumber","onClick","current","click","_c","$RefreshReg$"],"sources":["C:/Users/fkuce/OneDrive/Desktop/Money Projects/Visualizer/frontend/src/components/AudioUploader.js"],"sourcesContent":["import React, { useRef } from 'react';\r\nimport './AudioUploader.css';\r\n\r\nconst AudioUploader = ({ onUpload }) => {\r\n  const fileInputRef = useRef(null);\r\n\r\n  const handleFileChange = async (event) => {\r\n    const file = event.target.files[0];\r\n    if (!file) return;\r\n\r\n    const formData = new FormData();\r\n    formData.append('audio', file);\r\n\r\n    try {\r\n      const response = await fetch('http://localhost:5001/api/upload', {\r\n        method: 'POST',\r\n        body: formData\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error('Upload failed');\r\n      }\r\n\r\n      const data = await response.json();\r\n      onUpload(data);\r\n    } catch (error) {\r\n      console.error('Error uploading file:', error);\r\n      alert('Failed to upload file. Please try again.');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"audio-uploader\">\r\n      <input\r\n        type=\"file\"\r\n        ref={fileInputRef}\r\n        onChange={handleFileChange}\r\n        accept=\"audio/*\"\r\n        style={{ display: 'none' }}\r\n      />\r\n      <button\r\n        className=\"upload-button\"\r\n        onClick={() => fileInputRef.current.click()}\r\n      >\r\n        Upload Audio File\r\n      </button>\r\n      <p className=\"file-types\">Supported formats: MP3, WAV, OGG</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AudioUploader; "],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,MAAM,QAAQ,OAAO;AACrC,OAAO,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7B,MAAMC,aAAa,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EACtC,MAAMC,YAAY,GAAGN,MAAM,CAAC,IAAI,CAAC;EAEjC,MAAMO,gBAAgB,GAAG,MAAOC,KAAK,IAAK;IACxC,MAAMC,IAAI,GAAGD,KAAK,CAACE,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;IAClC,IAAI,CAACF,IAAI,EAAE;IAEX,MAAMG,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;IAC/BD,QAAQ,CAACE,MAAM,CAAC,OAAO,EAAEL,IAAI,CAAC;IAE9B,IAAI;MACF,MAAMM,QAAQ,GAAG,MAAMC,KAAK,CAAC,kCAAkC,EAAE;QAC/DC,MAAM,EAAE,MAAM;QACdC,IAAI,EAAEN;MACR,CAAC,CAAC;MAEF,IAAI,CAACG,QAAQ,CAACI,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,eAAe,CAAC;MAClC;MAEA,MAAMC,IAAI,GAAG,MAAMN,QAAQ,CAACO,IAAI,CAAC,CAAC;MAClClB,QAAQ,CAACiB,IAAI,CAAC;IAChB,CAAC,CAAC,OAAOE,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;MAC7CE,KAAK,CAAC,0CAA0C,CAAC;IACnD;EACF,CAAC;EAED,oBACEvB,OAAA;IAAKwB,SAAS,EAAC,gBAAgB;IAAAC,QAAA,gBAC7BzB,OAAA;MACE0B,IAAI,EAAC,MAAM;MACXC,GAAG,EAAEvB,YAAa;MAClBwB,QAAQ,EAAEvB,gBAAiB;MAC3BwB,MAAM,EAAC,SAAS;MAChBC,KAAK,EAAE;QAAEC,OAAO,EAAE;MAAO;IAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5B,CAAC,eACFnC,OAAA;MACEwB,SAAS,EAAC,eAAe;MACzBY,OAAO,EAAEA,CAAA,KAAMhC,YAAY,CAACiC,OAAO,CAACC,KAAK,CAAC,CAAE;MAAAb,QAAA,EAC7C;IAED;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACTnC,OAAA;MAAGwB,SAAS,EAAC,YAAY;MAAAC,QAAA,EAAC;IAAgC;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC3D,CAAC;AAEV,CAAC;AAAChC,EAAA,CA9CIF,aAAa;AAAAsC,EAAA,GAAbtC,aAAa;AAgDnB,eAAeA,aAAa;AAAC,IAAAsC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}